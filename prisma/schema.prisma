// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Post {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  slug        String    @unique
  title       String
  content     String
  image       String
  description String
  category    String
  previous    String?   //slug of previous post in series
  next        String?   //slug of next post in series
  published   Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  //author   User      @relation(fields: [authorId], references: [id])
  //authorId String    @db.ObjectId
  //comments Comment[]
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  email       String    @unique
  password    String
  username    String    @unique
  subscribed  Boolean   @default(false)
  admin       Boolean   @default(false)
}

model Course {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String    
  description String
  image       String?    
  price       Float?
  isPublished Boolean   @default(false)
  categoryId  String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Attachment{
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  url         String
  courseId    String    //id of the couorse the attachment beloongs to
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  //@@index([courseId])
}

model Chapter{
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  info        String    //markdown content for chapter
  courseId    String    //id of course chapter belongs to
  questions   String[]  @default([])    //questions and answers
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  //@@index([courseId])
}

model Question{
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  chapterId   String    //id of course chapter belongs to
  question    String    //questions and answers
  testcase    String[]  @default([])//potential test cases to pass for code questions
  expected    String?   //expected output for test cases in code questions
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  //@@index([courseId])
}

model Answer{
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  questionId  String    //questions and answers
  answer      String
  correct     Boolean   @default(false)
  testcase    String[]  @default([])//potential test cases to pass for code questions
  expected    String?   //expected output for test cases in code questions
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  //@@index([courseId])
}

model Category{
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
}